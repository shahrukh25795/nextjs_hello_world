{"version":3,"file":"static/webpack/static\\development\\pages\\user.js.022fa8e5ee8a5c929788.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./pages/user.js"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\r\nexport default function _arrayWithoutHoles(arr) {\r\n  if (_Array$isArray(arr)) {\r\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\r\n      arr2[i] = arr[i];\r\n    }\r\n\r\n    return arr2;\r\n  }\r\n}","import _Array$from from \"../../core-js/array/from\";\r\nimport _isIterable from \"../../core-js/is-iterable\";\r\nexport default function _iterableToArray(iter) {\r\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\r\n}","export default function _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\r\nimport iterableToArray from \"./iterableToArray\";\r\nimport nonIterableSpread from \"./nonIterableSpread\";\r\nexport default function _toConsumableArray(arr) {\r\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\r\n}","import React, { Component } from 'react';\r\nimport Select from 'react-select'\r\nimport { Router } from '../routes'\r\n\r\n\r\nclass User extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            userList: [\r\n                {\r\n                    \"login\": \"drit\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"defunkt\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"pjhyett\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"wycats\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"ezmobius\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"ivey\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"evanphx\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"vanpelt\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"wayneeseguin\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"brynary\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"kevinclark\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"technoweenie\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"macournoyer\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"takeo\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"caged\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"topfunky\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"anotherjesse\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"roland\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"lukas\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"fanvsfan\",\r\n                    \"type\": \"User\",\r\n                },\r\n            ],\r\n            dummyList :  [\r\n                {\r\n                    \"login\": \"drit\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"defunkt\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"pjhyett\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"wycats\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"ezmobius\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"ivey\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"evanphx\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"vanpelt\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"wayneeseguin\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"brynary\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"kevinclark\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"technoweenie\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"macournoyer\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"takeo\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"caged\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"topfunky\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"anotherjesse\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"roland\",\r\n                    \"type\": \"User\",\r\n                },\r\n                {\r\n                    \"login\": \"lukas\",\r\n                    \"type\": \"superUser\",\r\n                },\r\n                {\r\n                    \"login\": \"fanvsfan\",\r\n                    \"type\": \"User\",\r\n                },\r\n            ],\r\n            userType : null,\r\n            userTypeOption : [\r\n                {\"label\": \"user\",\"value\" : \"user\"},\r\n                {\"label\": \"superUser\",\"value\" : \"superUser\"}\r\n            ], \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.url.query) {\r\n            this.setState({\r\n                userType: this.props.url.query.userType ? {\"label\" : this.props.url.query.userType, \"value\" : this.props.url.query.userType} : null\r\n            }, () => this.preFillData())\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.url.query.userType !== prevProps.url.query.userType)\r\n            this.setState({\r\n                userType: this.props.url.query.userType ? {\"label\" : this.props.url.query.userType, \"value\" : this.props.url.query.userType} : null\r\n            }, () => this.preFillData())\r\n    }\r\n\r\n    preFillData = () => {\r\n        console.log(this.state.filter)\r\n        const userList = [...this.state.dummyList], data = [];\r\n        if (this.state.userType) {\r\n            userList.map((i) => {\r\n                if (i.type === this.state.userType.value) {\r\n                    data.push(i);\r\n                }\r\n                return i\r\n            })\r\n        }\r\n        this.setState({\r\n            userList: data.length > 0 ? data : userList\r\n        })\r\n    }\r\n\r\n    handleChange=(el)=>{\r\n        this.setState({\r\n            userType : el\r\n        },()=>{\r\n            Router.pushRoute('/user?userType=' + el.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const divStyle= {\r\n            padding : \"10px\",\r\n            margin : \"10px\",\r\n            border :\"1px solid #f7f7f7\",\r\n            width : \"20%\",\r\n            backgroundColor : \"#d9d9d9\",\r\n        }, \r\n        divStyle1={\r\n            padding : \"10px\",\r\n            margin : \"10px\",\r\n            width : \"20%\",\r\n        }\r\n        return (\r\n            <div style={{width :\"100%\"}}>\r\n                <div style={divStyle1}>\r\n                <Select\r\n                    placeholder=\"Apply filter\"\r\n                    value={this.state.userType}\r\n                    onChange={this.handleChange}\r\n                    options={this.state.userTypeOption}\r\n                />\r\n                </div>\r\n                {this.state.userList.map((i,index) => {\r\n                    return (\r\n                        <div style={divStyle} key={index}>\r\n                            {i.login}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+LA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA7MA;AA+MA;AACA;AADA;AAGA;AACA;AACA;AACA;AAnxKA;AAFA;AA6KA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AACA;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAAA;AAAA;AAIA;AAGA;;;;AAvPA;AACA;AAyPA;;;;A","sourceRoot":""}